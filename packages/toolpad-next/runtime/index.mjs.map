{"version":3,"sources":["../src/runtime/index.tsx","../../toolpad-utils/src/events.ts","../../toolpad-utils/src/hooks/useStorageState.ts","../src/runtime/DevtoolOverlay.tsx","../src/runtime/DataGridFileEditor/DataGridFileEditor.tsx","../src/runtime/DataGridFileEditor/ColumnsEditor.tsx","../src/runtime/JsonPointerInput.tsx","../../toolpad-utils/src/strings.ts","../src/shared/jsonPointer.ts","../src/runtime/probes.tsx","../src/runtime/DataGridFileEditor/RowsEditor.tsx","../../toolpad-utils/src/hooks/useDebouncedHandler.ts","../src/runtime/theme.ts","../src/runtime/server.tsx","../src/shared/RpcClient.ts","../src/shared/rpc.ts","../src/shared/codeGeneration/index.ts","../src/shared/prettier.ts","../src/shared/codeGeneration/generateDataGridComponent.ts","../src/shared/codeGeneration/utils.ts","../src/shared/codeGeneration/Scope.ts","../src/shared/codeGeneration/Imports.ts","../src/shared/paths.ts","../src/runtime/DevtoolHost.tsx","../src/runtime/CurrentComponentContext.ts"],"names":["React","Box","Button","invariant","IconButton","ThemeProvider","Typography","path","TextField","Autocomplete","getSnapshot","subscribe","emitter","MenuItem","Stack","resolve","format","cache"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport useStorageState from '@mui/toolpad-utils/hooks/useStorageState';\nimport { Box, Button, ButtonProps } from '@mui/material';\nimport EditIcon from '@mui/icons-material/Edit';\nimport invariant from 'invariant';\nimport { WithDevtoolParams } from '../shared/types';\nimport DevtoolOverlay from './DevtoolOverlay';\nimport { ServerProvider } from './server';\nimport { ComponentInfo, CurrentComponentContext } from './CurrentComponentContext';\nimport * as probes from './probes';\nimport { getComponentNameFromInputFile } from '../shared/paths';\n\nexport { probes };\n\nfunction useCurrentlyEditedComponentId() {\n  const [currentEditedComponentId, setCurrentlyEditedComponentId] = useStorageState(\n    'session',\n    'currently-edited-component-id',\n    null,\n  );\n  const handleEditedComponentIdChange: React.Dispatch<React.SetStateAction<string | null>> =\n    React.useCallback(\n      (value) => {\n        probes.reset();\n        setCurrentlyEditedComponentId(value);\n      },\n      [setCurrentlyEditedComponentId],\n    );\n  return [currentEditedComponentId, handleEditedComponentIdChange] as const;\n}\n\nlet nextId = 1;\n\nexport function EditButton(props: ButtonProps) {\n  const [currentEditedComponentId, setCurrentlyEditedComponentId] = useCurrentlyEditedComponentId();\n  const componentInfo = React.useContext(CurrentComponentContext);\n\n  invariant(componentInfo, `EditButton must be used inside a Component`);\n\n  if (currentEditedComponentId === componentInfo.id) {\n    return null;\n  }\n\n  return (\n    <Button\n      {...props}\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={() => setCurrentlyEditedComponentId(componentInfo.id)}\n      startIcon={<EditIcon />}\n    >\n      Edit\n    </Button>\n  );\n}\n\nexport function withDevtool<P extends object>(\n  Component: React.ComponentType<P>,\n  { filePath, file, wsUrl, dependencies }: WithDevtoolParams,\n): React.ComponentType<P> {\n  const name = getComponentNameFromInputFile(filePath);\n\n  return function ComponentWithDevtool(props) {\n    const [currentlyEditedComponentId, setCurrentlyEditedComponentId] =\n      useCurrentlyEditedComponentId();\n\n    const [id] = React.useState(() => {\n      // Using this over React.useId() as this is more stable across page reloads\n      const newId = `component-${nextId}`;\n      nextId += 1;\n      return newId;\n    });\n\n    const editing = currentlyEditedComponentId === id;\n\n    const componentInfo: ComponentInfo = React.useMemo(() => {\n      return { id, name, file, props };\n    }, [id, props]);\n\n    const [RenderedComponent, setRenderedComponent] = React.useState<React.ComponentType<P>>(\n      () => Component,\n    );\n\n    const handleComponentUpdate = React.useCallback((NewComponent: React.ComponentType<any>) => {\n      setRenderedComponent(() => NewComponent);\n    }, []);\n\n    React.useEffect(() => {\n      if (!editing) {\n        setRenderedComponent(() => Component);\n      }\n    }, [editing]);\n\n    return (\n      <CurrentComponentContext.Provider value={componentInfo}>\n        {editing ? (\n          <ServerProvider wsUrl={wsUrl}>\n            <Box\n              sx={{\n                display: 'contents',\n                '> *': {\n                  outlineColor: (theme) => theme.palette.secondary.main,\n                  outlineStyle: 'solid',\n                  outlineWidth: 2,\n                },\n              }}\n            >\n              <RenderedComponent {...props} />\n            </Box>\n            <DevtoolOverlay\n              filePath={filePath}\n              file={file}\n              dependencies={dependencies}\n              onClose={() => {\n                setCurrentlyEditedComponentId(null);\n              }}\n              onCommitted={() => {\n                setCurrentlyEditedComponentId(null);\n              }}\n              onComponentUpdate={handleComponentUpdate}\n            />\n          </ServerProvider>\n        ) : (\n          <RenderedComponent {...props} />\n        )}\n      </CurrentComponentContext.Provider>\n    );\n  };\n}\n","export type EventName = string | symbol;\n\nexport type EventHandlers = Record<EventName, unknown>;\n\nexport type EventHandler<T extends EventHandlers, K extends keyof T = keyof T> = (\n  event: T[K],\n) => void;\n\nexport type AllEventsHandler<T extends EventHandlers, K extends keyof T = keyof T> = (\n  type: K,\n  event: T[K],\n) => void;\n\n/**\n * Lightweight event emitter\n */\nexport class Emitter<T extends EventHandlers = {}> {\n  private handlers = new Map<keyof T, Set<EventHandler<T> | AllEventsHandler<T>>>();\n\n  /**\n   * Add a listener for an event\n   */\n  on(name: '*', handler: AllEventsHandler<T>): void;\n  on<K extends keyof T>(name: K, handler: EventHandler<T, K>): void;\n  on<K extends keyof T>(name: K | '*', handler: EventHandler<T, K> | AllEventsHandler<T>): void {\n    let eventHandlers = this.handlers.get(name);\n    if (!eventHandlers) {\n      eventHandlers = new Set();\n      this.handlers.set(name, eventHandlers);\n    }\n    eventHandlers.add(handler as EventHandler<T> | AllEventsHandler<T>);\n  }\n\n  /**\n   * Remove a listener from an event\n   */\n  off<K extends keyof T>(name: K, handler: EventHandler<T, K>) {\n    const eventHandlers = this.handlers.get(name);\n    if (eventHandlers) {\n      eventHandlers.delete(handler as EventHandler<T> | AllEventsHandler<T>);\n      if (eventHandlers.size <= 0) {\n        this.handlers.delete(name);\n      }\n    }\n  }\n\n  /**\n   * Subscribe to an event and return an unsubscribe function.\n   */\n  subscribe<K extends keyof T>(name: K, handler: EventHandler<T, K>) {\n    this.on(name, handler);\n    return () => {\n      this.off(name, handler);\n    };\n  }\n\n  /**\n   * Emit an event.\n   */\n  emit<K extends keyof T>(name: K, event: T[K]) {\n    const eventHandlers = this.handlers.get(name);\n    if (eventHandlers) {\n      for (const eventHandler of eventHandlers) {\n        (eventHandler as EventHandler<T, K>)(event);\n      }\n    }\n    const allHandlers = this.handlers.get('*');\n    if (allHandlers) {\n      for (const eventHandler of allHandlers) {\n        (eventHandler as AllEventsHandler<T>)(name, event);\n      }\n    }\n  }\n}\n","import * as React from 'react';\nimport { Emitter } from '../events';\n\n// storage events only work across windows, we'll use an event emitter to announce within the window\nconst emitter = new Emitter<Record<string, null>>();\n// local cache, needed for getSnapshot\nconst cache = new Map<string, string>();\n\nfunction subscribe(area: Storage, key: string, cb: () => void): () => void {\n  const onKeyChange = () => {\n    // invalidate local cache\n    cache.delete(key);\n    cb();\n  };\n  const storageHandler = (event: StorageEvent) => {\n    if (event.storageArea === area && event.key === key) {\n      onKeyChange();\n    }\n  };\n  window.addEventListener('storage', storageHandler);\n  emitter.on(key, onKeyChange);\n  return () => {\n    window.removeEventListener('storage', storageHandler);\n    emitter.off(key, onKeyChange);\n  };\n}\n\nfunction getSnapshot(area: Storage, key: string): string | null {\n  let value = cache.get(key) ?? null;\n  if (!value) {\n    const item = area.getItem(key);\n    value = item;\n    if (value === null) {\n      cache.delete(key);\n    } else {\n      cache.set(key, value);\n    }\n  }\n  return value;\n}\n\nfunction setValue(area: Storage, key: string, value: string | null) {\n  if (typeof window !== 'undefined') {\n    if (value === null) {\n      cache.delete(key);\n      area.removeItem(key);\n    } else {\n      cache.set(key, value);\n      area.setItem(key, String(value));\n    }\n    emitter.emit(key, null);\n  }\n}\n\ntype Initializer<T> = () => T;\n\ntype UseStorageStateHookResult<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nfunction useStorageStateServer(\n  kind: 'session' | 'local',\n  key: string,\n  initializer: string | Initializer<string>,\n): UseStorageStateHookResult<string>;\nfunction useStorageStateServer(\n  kind: 'session' | 'local',\n  key: string,\n  initializer?: string | null | Initializer<string | null>,\n): UseStorageStateHookResult<string | null>;\nfunction useStorageStateServer(\n  kind: 'session' | 'local',\n  key: string,\n  initializer: string | null | Initializer<string | null> = null,\n): UseStorageStateHookResult<string | null> | UseStorageStateHookResult<string> {\n  const [initialValue] = React.useState(initializer);\n  return [initialValue, () => {}];\n}\n\n/**\n * Sync state to local/session storage so that it persists through a page refresh. Usage is\n * similar to useState except we pass in a storage key so that we can default\n * to that value on page load instead of the specified initial value.\n *\n * Since the storage API isn't available in server-rendering environments, we\n * return initialValue during SSR and hydration.\n *\n * Things this hook does different from existing solutions:\n * - SSR-capable: it shows initial value during SSR and hydration, but immediately\n *   initializes when clientside mounted.\n * - Sync state across tabs: When another tab changes the value in the storage area, the\n *   current tab follows suit.\n */\nfunction useStorageStateBrowser(\n  kind: 'session' | 'local',\n  key: string,\n  initializer: string | Initializer<string>,\n): UseStorageStateHookResult<string>;\nfunction useStorageStateBrowser(\n  kind: 'session' | 'local',\n  key: string,\n  initializer?: string | null | Initializer<string | null>,\n): UseStorageStateHookResult<string | null>;\nfunction useStorageStateBrowser(\n  kind: 'session' | 'local',\n  key: string,\n  initializer: string | null | Initializer<string | null> = null,\n): UseStorageStateHookResult<string | null> | UseStorageStateHookResult<string> {\n  const [initialValue] = React.useState(initializer);\n  const area = kind === 'session' ? window.sessionStorage : window.localStorage;\n  const subscribeKey = React.useCallback((cb: () => void) => subscribe(area, key, cb), [area, key]);\n  const getKeySnapshot = React.useCallback(\n    () => getSnapshot(area, key) ?? initialValue,\n    [area, initialValue, key],\n  );\n  const getKeyServerSnapshot = React.useCallback(() => initialValue, [initialValue]);\n\n  const storedValue = React.useSyncExternalStore(\n    subscribeKey,\n    getKeySnapshot,\n    getKeyServerSnapshot,\n  );\n\n  const setStoredValue = React.useCallback(\n    (value: React.SetStateAction<string | null>) => {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setValue(area, key, valueToStore);\n    },\n    [area, key, storedValue],\n  );\n\n  return [storedValue, setStoredValue];\n}\n\nexport default typeof window === 'undefined' ? useStorageStateServer : useStorageStateBrowser;\n","import * as React from 'react';\nimport * as sucrase from 'sucrase';\nimport {\n  Box,\n  CircularProgress,\n  IconButton,\n  ThemeProvider,\n  Tooltip,\n  Typography,\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport invariant from 'invariant';\nimport SaveIcon from '@mui/icons-material/Save';\nimport * as path from 'path-browserify';\nimport { ToolpadFile } from '../shared/schemas';\nimport DataGridFileEditor from './DataGridFileEditor';\nimport theme from './theme';\nimport { useServer } from './server';\nimport { CodeGenerationResult, generateComponent } from '../shared/codeGeneration';\nimport DevtoolHost from './DevtoolHost';\nimport { getComponentNameFromInputFile, getOutputPathForInputFile } from '../shared/paths';\n\nconst CONNECTION_STATUS_DISPLAY = {\n  connecting: { label: 'Connecting', color: 'info.main' },\n  connected: { label: 'Connected', color: 'success.main' },\n  disconnected: { label: 'Disconnected', color: 'error.main' },\n};\n\ninterface FileEditorProps {\n  value: ToolpadFile;\n  onChange: (value: ToolpadFile) => void;\n  source?: CodeGenerationResult;\n  commitButton: React.ReactNode;\n}\n\nfunction FileEditor({ commitButton, value, onChange, source }: FileEditorProps) {\n  switch (value.kind) {\n    case 'DataGrid':\n      return (\n        <DataGridFileEditor\n          value={value}\n          onChange={onChange}\n          source={source}\n          commitButton={commitButton}\n        />\n      );\n    default:\n      return <Typography>Unknown file: {value.kind}</Typography>;\n  }\n}\n\ninterface ModuleInstance {\n  exports: unknown;\n}\n\nasync function evaluate(\n  files: Map<string, { code: string }>,\n  entry: string,\n  dependencies = new Map<string, ModuleInstance>(),\n) {\n  const cache = new Map<string, ModuleInstance>(dependencies);\n  const extensions = ['.js', '.jsx', '.ts', '.tsx'];\n\n  const resolveId = (importee: string, importer: string) => {\n    if (importee.startsWith('.') || importee.startsWith('/')) {\n      const resolved = path.resolve(path.dirname(importer), importee);\n      if (files.has(resolved)) {\n        return path.resolve(path.dirname(importer), importee);\n      }\n\n      for (const ext of extensions) {\n        const resolvedWithExt = resolved + ext;\n        if (files.has(resolvedWithExt)) {\n          return resolvedWithExt;\n        }\n      }\n    } else if (dependencies.has(importee)) {\n      return importee;\n    }\n\n    throw new Error(`Could not resolve \"${importee}\" from \"${importer}\"`);\n  };\n\n  const createRequireFn = (importer: string) => (importee: string) => {\n    const resolved = resolveId(importee, importer);\n\n    const cached = cache.get(resolved);\n\n    if (cached) {\n      return cached.exports;\n    }\n\n    const mod = files.get(resolved);\n\n    if (!mod) {\n      throw new Error(`Can't find a module for \"${importee}\"`);\n    }\n\n    const compiled = sucrase.transform(mod.code, {\n      transforms: ['imports', 'typescript', 'jsx'],\n    });\n\n    const fn = new Function('module', 'exports', 'require', compiled.code);\n    const exportsObj: unknown = {};\n    const moduleObj = { exports: exportsObj };\n    const requireFn = createRequireFn(resolved);\n    fn(moduleObj, exportsObj, requireFn);\n\n    cache.set(resolved, moduleObj);\n\n    return moduleObj.exports;\n  };\n\n  const requireEntry = createRequireFn('/');\n\n  return requireEntry(entry);\n}\n\nexport interface DevtoolOverlayProps {\n  filePath: string;\n  file: ToolpadFile;\n  dependencies: readonly [string, () => Promise<unknown>][];\n  onClose?: () => void;\n  onCommitted?: () => void;\n  onComponentUpdate?: (Component: React.ComponentType) => void;\n}\n\nexport default function DevtoolOverlay({\n  filePath,\n  file,\n  onComponentUpdate,\n  onClose,\n  onCommitted,\n  dependencies,\n}: DevtoolOverlayProps) {\n  const rootRef = React.useRef<HTMLDivElement>(null);\n  const name = getComponentNameFromInputFile(filePath);\n\n  const [inputValue, setInputValue] = React.useState(file);\n\n  const { connectionStatus } = useServer();\n\n  const [source, setSource] = React.useState<CodeGenerationResult | undefined>(undefined);\n\n  React.useEffect(() => {\n    const outDir = '/';\n    generateComponent(filePath, inputValue, { target: 'prod', outDir })\n      .then((result) => {\n        setSource(result);\n      })\n      .catch((error) => {\n        console.error(error);\n        setSource(undefined);\n      });\n  }, [inputValue, filePath, dependencies, onComponentUpdate]);\n\n  React.useEffect(() => {\n    const outDir = '/';\n    generateComponent(filePath, inputValue, { target: 'preview', outDir })\n      .then(async (result) => {\n        const resolvedDependencies = await Promise.all(\n          dependencies.map(\n            async ([k, v]) => [k, { exports: await v() }] satisfies [string, unknown],\n          ),\n        );\n\n        const outputPath = getOutputPathForInputFile(filePath, outDir);\n\n        const moduleExports = await evaluate(\n          new Map(result.files),\n          outputPath,\n          new Map(resolvedDependencies),\n        );\n\n        const NewComponent = (moduleExports as any)?.default as React.ComponentType;\n        invariant(\n          typeof NewComponent === 'function',\n          `Compilation must result in a function as default export`,\n        );\n        onComponentUpdate?.(NewComponent);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [inputValue, filePath, dependencies, onComponentUpdate]);\n\n  const server = useServer();\n\n  const commitButton = (\n    <Tooltip title=\"Commit changes\">\n      <IconButton\n        sx={{ m: 0.5 }}\n        onClick={() => {\n          server.saveFile(name, inputValue).then(() => onCommitted?.());\n        }}\n      >\n        <SaveIcon />\n      </IconButton>\n    </Tooltip>\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <DevtoolHost>\n        <Box\n          ref={rootRef}\n          sx={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'stretch',\n          }}\n        >\n          <Box\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'space-between',\n              borderBottom: 1,\n              borderColor: 'divider',\n              pl: 2,\n            }}\n          >\n            <Typography>\n              {name} ({file.kind})\n            </Typography>\n            <Box\n              sx={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center',\n                gap: 1,\n              }}\n            >\n              <Box\n                sx={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  minWidth: 190,\n                  gap: 1,\n                }}\n              >\n                <Typography>Status:</Typography>\n                <Box\n                  sx={{\n                    display: 'inline-block',\n                    borderRadius: '50%',\n                    width: 16,\n                    height: 16,\n                    backgroundColor: CONNECTION_STATUS_DISPLAY[connectionStatus].color,\n                  }}\n                />\n                <Typography>{CONNECTION_STATUS_DISPLAY[connectionStatus].label}</Typography>\n              </Box>\n              <IconButton size=\"small\" onClick={onClose}>\n                <CloseIcon fontSize=\"inherit\" />\n              </IconButton>\n            </Box>\n          </Box>\n          <Box sx={{ flex: 1, overflow: 'hidden', position: 'relative' }}>\n            {connectionStatus === 'connected' ? (\n              <FileEditor\n                value={inputValue}\n                onChange={setInputValue}\n                source={source}\n                commitButton={commitButton}\n              />\n            ) : (\n              <Box\n                sx={{\n                  position: 'absolute',\n                  inset: '0 0 0 0',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  backgroundColor: 'rgba(255, 255, 255, 0.7)',\n                  gap: 1,\n                }}\n              >\n                {connectionStatus === 'disconnected' ? (\n                  <React.Fragment>\n                    <ErrorOutlineIcon color=\"error\" />\n                    Connection lost\n                  </React.Fragment>\n                ) : (\n                  <CircularProgress />\n                )}\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </DevtoolHost>\n    </ThemeProvider>\n  );\n}\n","import * as React from 'react';\nimport {\n  Box,\n  Tab,\n  styled,\n  Container,\n  TextFieldProps,\n  TextField,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  Typography,\n} from '@mui/material';\nimport { TabContext, TabList, TabPanel as MuiTabPanel } from '@mui/lab';\nimport useStorageState from '@mui/toolpad-utils/hooks/useStorageState';\nimport { DataGridFile, DataGridSpec } from '../../shared/schemas';\nimport ColumnsEditor from './ColumnsEditor';\nimport RowsEditor from './RowsEditor';\nimport { CodeGenerationResult } from '../../shared/codeGeneration';\n\nfunction NumberField({ value, onChange, onBlur, ...props }: TextFieldProps) {\n  const [input, setInput] = React.useState(value);\n  React.useEffect(() => {\n    setInput(value);\n  }, [value]);\n  const clearEventRef = React.useRef<React.ChangeEvent<HTMLInputElement> | null>(null);\n  const handleChange = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = event.target.value;\n      setInput(newValue);\n      if (newValue) {\n        // Only fire onChange when there is a value\n        onChange?.(event);\n        clearEventRef.current = null;\n      } else {\n        clearEventRef.current = event;\n      }\n    },\n    [onChange],\n  );\n  const handleBlur = React.useCallback(\n    (event: React.FocusEvent<HTMLInputElement>) => {\n      if (clearEventRef.current) {\n        onChange?.(clearEventRef.current);\n      }\n      onBlur?.(event);\n    },\n    [onBlur, onChange],\n  );\n  return (\n    <TextField type=\"number\" value={input} onChange={handleChange} onBlur={handleBlur} {...props} />\n  );\n}\n\nconst TabPanel = styled(MuiTabPanel)({ padding: 0, flex: 1, minHeight: 0 });\n\ninterface DataGridFileEditorProps {\n  value: DataGridFile;\n  onChange: (value: DataGridFile) => void;\n  source?: CodeGenerationResult;\n  commitButton: React.ReactNode;\n}\n\nexport default function DataGridFileEditor({\n  value,\n  onChange,\n  source,\n  commitButton,\n}: DataGridFileEditorProps) {\n  const [activeTab, setActiveTab] = useStorageState('session', `activeTab`, 'data');\n\n  const handleSpecChange = React.useCallback(\n    (newSpec: DataGridSpec) => {\n      if (value.spec !== newSpec) {\n        onChange({\n          ...value,\n          spec: newSpec,\n        });\n      }\n    },\n    [onChange, value],\n  );\n\n  const heightMode = value.spec?.heightMode || 'fixed';\n\n  return (\n    <Box sx={{ width: '100%', height: '100%', display: 'flex', flexDirection: 'column' }}>\n      <TabContext value={activeTab}>\n        <Box\n          sx={{\n            borderBottom: 1,\n            borderColor: 'divider',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'end',\n          }}\n        >\n          <TabList onChange={(_event, newValue) => setActiveTab(newValue)}>\n            <Tab label=\"General\" value=\"general\" />\n            <Tab label=\"Rows\" value=\"rows\" />\n            <Tab label=\"Columns\" value=\"columns\" />\n            <Tab label=\"Source\" value=\"source\" />\n          </TabList>\n          {commitButton}\n        </Box>\n\n        <TabPanel value=\"general\">\n          <Container>\n            <Box>\n              <FormControl>\n                <FormLabel>Data Grid Height</FormLabel>\n                <RadioGroup\n                  value={heightMode}\n                  onChange={(event, newHeightMode) =>\n                    handleSpecChange({\n                      ...value.spec,\n                      heightMode: newHeightMode as DataGridSpec['heightMode'],\n                    })\n                  }\n                >\n                  <FormControlLabel value=\"auto\" control={<Radio />} label=\"Auto height\" />\n                  <FormControlLabel\n                    value=\"container\"\n                    control={<Radio />}\n                    label=\"Adapt height to container\"\n                  />\n                  <FormControlLabel value=\"fixed\" control={<Radio />} label=\"Fixed height\" />\n                </RadioGroup>\n              </FormControl>\n            </Box>\n            <Box>\n              <NumberField\n                label=\"height\"\n                value={value.spec?.height ?? 400}\n                disabled={heightMode !== 'fixed'}\n                onChange={(event) => {\n                  handleSpecChange({\n                    ...value.spec,\n                    height: event.target.value ? Number(event.target.value) : undefined,\n                  });\n                }}\n              />\n            </Box>\n          </Container>\n        </TabPanel>\n        <TabPanel value=\"rows\">\n          <RowsEditor value={value.spec || {}} onChange={handleSpecChange} />\n        </TabPanel>\n        <TabPanel value=\"columns\">\n          <ColumnsEditor value={value.spec ?? {}} onChange={handleSpecChange} />\n        </TabPanel>\n        <TabPanel value=\"source\">\n          <Container sx={{ width: '100%', height: '100%', overflow: 'auto', px: 4 }}>\n            {source\n              ? source.files.map(([path, { code }]) => (\n                  <Box key={path}>\n                    <Typography variant=\"h6\">{path}</Typography>\n                    <pre>{code}</pre>\n                  </Box>\n                ))\n              : null}\n          </Container>\n        </TabPanel>\n      </TabContext>\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport {\n  Box,\n  IconButton,\n  InputAdornment,\n  List,\n  ListItem,\n  ListItemButton,\n  ListItemText,\n  MenuItem,\n  OutlinedInput,\n  Stack,\n  Autocomplete,\n  TextField,\n  Button,\n} from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n  ColumnType,\n  ColumnDefinitionsSpec,\n  DataGridSpec,\n  ColumnDefinitionSpec,\n} from '../../shared/schemas';\nimport JsonPointerInput from '../JsonPointerInput';\nimport { useProbe } from '../probes';\nimport * as jsonPointer from '../../shared/jsonPointer';\n\ninterface ColumnTypeOption {\n  label: string;\n}\n\nconst COLUMN_TYPE_OPTIONS: Record<ColumnType, ColumnTypeOption> = {\n  string: { label: 'String' },\n  number: { label: 'Number' },\n  boolean: { label: 'Boolean' },\n  date: { label: 'Date' },\n  datetime: { label: 'DateTime' },\n};\n\nfunction getTypeLabel(type?: ColumnType) {\n  return type ? COLUMN_TYPE_OPTIONS[type].label : COLUMN_TYPE_OPTIONS.string.label;\n}\n\ninterface ColumnDefinitionEditorProps {\n  columns: ColumnDefinitionsSpec;\n  value: ColumnDefinitionSpec;\n  onChange: (value: ColumnDefinitionSpec) => void;\n  onDelete: () => void;\n}\n\nfunction ColumnDefinitionEditor({\n  columns,\n  value,\n  onChange,\n  onDelete,\n}: ColumnDefinitionEditorProps) {\n  const rows = useProbe('rows');\n\n  const fieldSuggestions = React.useMemo(() => {\n    const availableKeys = Object.keys((rows as any)?.[0] ?? {});\n    const definedKeys = new Set(columns.map((column) => column.field));\n    return availableKeys.filter((key) => !definedKeys.has(key));\n  }, [columns, rows]);\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        freeSolo\n        disableClearable\n        options={fieldSuggestions}\n        value={value.field}\n        onChange={(event, newValue) => onChange({ ...value, field: newValue })}\n        renderInput={(params) => <TextField {...params} label=\"Field\" />}\n      />\n      <JsonPointerInput\n        label=\"Value Selector\"\n        target={(rows as any)?.[0]}\n        value={value.valueSelector || jsonPointer.encode([value.field])}\n        onChange={(valueSelector) => onChange({ ...value, valueSelector })}\n        helperText={\n          <React.Fragment>\n            Valid <a href=\"https://datatracker.ietf.org/doc/html/rfc6901\">JSON Pointer</a> that\n            references a (nested) property in the returned row.\n          </React.Fragment>\n        }\n      />\n      <TextField\n        label=\"Type\"\n        select\n        value={value.type ?? 'string'}\n        onChange={(event) => onChange({ ...value, type: event.target.value as ColumnType })}\n      >\n        {Object.keys(COLUMN_TYPE_OPTIONS).map((type) => (\n          <MenuItem key={type} value={type}>\n            {getTypeLabel(type as ColumnType)}\n          </MenuItem>\n        ))}\n      </TextField>\n      <Button color=\"error\" startIcon={<DeleteIcon />} onClick={() => onDelete?.()}>\n        Remove column\n      </Button>\n    </React.Fragment>\n  );\n}\n\nexport interface ColumnsDefinitionsEditorProps {\n  value: ColumnDefinitionsSpec;\n  onChange: (value: ColumnDefinitionsSpec) => void;\n}\n\nexport function ColumnsDefinitionsEditor({ value, onChange }: ColumnsDefinitionsEditorProps) {\n  const [activeIndex, setActiveIndex] = React.useState<number>(0);\n\n  const activeColumn = React.useMemo(() => value[activeIndex], [activeIndex, value]);\n\n  return (\n    <Stack direction=\"row\" sx={{ width: '100%', height: '100%' }}>\n      <Stack direction=\"column\" sx={{ width: '25%' }}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            p: 1,\n            gap: 1,\n          }}\n        >\n          <OutlinedInput\n            fullWidth\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <SearchIcon />\n              </InputAdornment>\n            }\n          />\n          <IconButton\n            onClick={() => {\n              onChange([...value, { field: 'new' }]);\n              setActiveIndex(value.length);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n        </Box>\n        <Box sx={{ overflow: 'auto' }}>\n          <List>\n            {value.map((column, i) => {\n              return (\n                <ListItem key={column.field} disablePadding>\n                  <ListItemButton selected={activeIndex === i} onClick={() => setActiveIndex(i)}>\n                    <ListItemText secondary={getTypeLabel(column.type)}>\n                      {column.field}\n                    </ListItemText>\n                  </ListItemButton>\n                </ListItem>\n              );\n            })}\n          </List>\n        </Box>\n      </Stack>\n      <Stack sx={{ p: 2 }}>\n        {activeColumn ? (\n          <ColumnDefinitionEditor\n            columns={value}\n            value={activeColumn}\n            onChange={(newColumn) => {\n              onChange(value.map((column, i) => (i === activeIndex ? newColumn : column)));\n            }}\n            onDelete={() => {\n              onChange(value.filter((_, i) => i !== activeIndex));\n              setActiveIndex(0);\n            }}\n          />\n        ) : null}\n      </Stack>\n    </Stack>\n  );\n}\n\nexport interface ColumnsEditorProps {\n  value: DataGridSpec;\n  onChange: (value: DataGridSpec) => void;\n}\n\nexport default function ColumnsEditor({ value, onChange }: ColumnsEditorProps) {\n  return (\n    <Box sx={{ width: '100%', height: '100%' }}>\n      <ColumnsDefinitionsEditor\n        value={value.columns || []}\n        onChange={(columns) => onChange({ ...value, columns })}\n      />\n    </Box>\n  );\n}\n","import * as React from 'react';\nimport { Autocomplete, TextField } from '@mui/material';\nimport * as jsonPath from '../shared/jsonPointer';\n\nexport interface JsonPointerInputProps {\n  value: string;\n  onChange: (newValue: string) => void;\n  filter?: (value: unknown) => boolean;\n  label?: string;\n  fullWidth?: boolean;\n  helperText?: React.ReactNode;\n  target?: unknown;\n}\n\nexport default function JsonPointerInput({\n  target,\n  value,\n  onChange,\n  filter,\n  ...props\n}: JsonPointerInputProps) {\n  const options = React.useMemo(\n    () =>\n      jsonPath\n        .generateSuggestions(target, {\n          filter,\n        })\n        .map((suggestion) => suggestion.pointer),\n    [target, filter],\n  );\n\n  return (\n    <Autocomplete\n      freeSolo\n      options={options}\n      value={value}\n      onChange={(event, newValue) => onChange(newValue ?? '')}\n      renderInput={(params) => <TextField {...props} {...params} />}\n    />\n  );\n}\n","/**\n * Makes the first letter of [str] uppercase.\n * Not locale aware.\n */\nexport function uncapitalize(str: string): string {\n  return str.length > 0 ? str[0].toLowerCase() + str.slice(1) : '';\n}\n\n/**\n * Makes the first letter of [str] lowercase.\n * Not locale aware.\n */\nexport function capitalize(str: string): string {\n  return str.length > 0 ? str[0].toUpperCase() + str.slice(1) : '';\n}\n\n/**\n * Capitalizes and joins all [parts].\n */\nexport function pascalCase(...parts: string[]): string {\n  return parts.map((part) => capitalize(part.toLowerCase())).join('');\n}\n\n/**\n * Joins all [parts] and camelcases the result\n */\nexport function camelCase(...parts: string[]): string {\n  if (parts.length > 0) {\n    const [first, ...rest] = parts;\n    return uncapitalize(first) + pascalCase(...rest);\n  }\n  return '';\n}\n\n/**\n * Generates a string for `base` by add a number until it's unique amongst a set of predefined names.\n */\nexport function generateUniqueString(base: string, existingNames: Set<string>) {\n  let i = 1;\n  if (!existingNames.has(base)) {\n    return base;\n  }\n  const newBase = base.replace(/\\d+$/, '');\n  let suggestion = newBase;\n  while (existingNames.has(suggestion)) {\n    suggestion = newBase + String(i);\n    i += 1;\n  }\n  return suggestion;\n}\n\n/**\n * Escape string for use in HTML.\n */\nexport function escapeHtml(unsafe: string): string {\n  return unsafe\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;');\n}\n\n/**\n * Normalizes and removes all diacritics from a javascript string.\n *\n * See https://stackoverflow.com/a/37511463\n */\nexport function removeDiacritics(input: string): string {\n  return input.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n}\n\nexport function isAbsoluteUrl(maybeUrl: string) {\n  try {\n    return !!new URL(maybeUrl);\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Removes a prefix from a string if it starts with it.\n */\nexport function removePrefix(input: string, prefix: string): string {\n  return input.startsWith(prefix) ? input.slice(prefix.length) : input;\n}\n\n/**\n * Removes a suffix from a string if it ends with it.\n */\nexport function removeSuffix(input: string, suffix: string): string {\n  return input.endsWith(suffix) ? input.slice(0, -suffix.length) : input;\n}\n\n/**\n * Adds a prefix to a string if it doesn't start with it.\n */\nexport function ensurePrefix(input: string, prefix: string): string {\n  return input.startsWith(prefix) ? input : prefix + input;\n}\n\n/**\n * Adds a suffix to a string if it doesn't end with it.\n */\nexport function ensureSuffix(input: string, suffix: string): string {\n  return input.endsWith(suffix) ? input : input + suffix;\n}\n\n/**\n * Regex to statically find all static import statements\n *\n * Tested against:\n *   import {\n *     Component\n *   } from '@angular2/core';\n *   import defaultMember from \"module-name\";\n *   import   *    as name from \"module-name  \";\n *   import   {  member }   from \"  module-name\";\n *   import { member as alias } from \"module-name\";\n *   import { member1 ,\n *   member2 } from \"module-name\";\n *   import { member1 , member2 as alias2 , member3 as alias3 } from \"module-name\";\n *   import defaultMember, { member, member } from \"module-name\";\n *   import defaultMember, * as name from \"module-name\";\n *   import \"module-name\";\n *   import * from './smdn';\n */\nconst IMPORT_STATEMENT_REGEX =\n  /^\\s*import(?:[\"'\\s]*([\\w*{}\\n, ]+)from\\s*)?[\"'\\s]*([^\"']+)[\"'\\s].*/gm;\n\n/**\n * Statically analyses a javascript source code for import statements and return the specifiers.\n *\n * NOTE: This function does a best effort without parsing the code. The result may contain false\n *       positives\n */\nexport function findImports(src: string): string[] {\n  return Array.from(src.matchAll(IMPORT_STATEMENT_REGEX), (match) => match[2]);\n}\n\n/**\n * Limits the length of a string and adds ellipsis if necessary.\n */\nexport function truncate(str: string, maxLength: number, dots: string = '...') {\n  if (str.length <= maxLength) {\n    return str;\n  }\n  return str.slice(0, maxLength) + dots;\n}\n\n/**\n * Prepend a prefix to each line in the text\n */\nexport function prependLines(text: string, prefix: string): string {\n  return text\n    .split('\\n')\n    .map((line) => prefix + line)\n    .join('\\n');\n}\n\n/**\n * Indent the text with [length] number of spaces\n */\nexport function indent(text: string, length = 2): string {\n  return prependLines(text, ' '.repeat(length));\n}\n\n/**\n * Returns true if the string is a valid javascript identifier\n */\nexport function isValidJsIdentifier(base: string): boolean {\n  return /^[a-zA-Z_][a-zA-Z0-9_]*$/.test(base);\n}\n","import { isValidJsIdentifier } from '@mui/toolpad-utils/strings';\n// Basic implementation of https://datatracker.ietf.org/doc/html/rfc6901\n\nexport type DecodedPath = (string | number)[];\n\nfunction decodeSegment(segment: string): string | number {\n  const decodedSegment = segment.replaceAll(/~0/g, '/').replaceAll(/~1/g, '~');\n  if (!decodedSegment) {\n    return decodedSegment;\n  }\n  const asNumber = Number(decodedSegment);\n  return Number.isNaN(asNumber) ? decodedSegment : asNumber;\n}\n\nfunction encodeSegment(segment: string | number): string {\n  return String(segment).replaceAll('~', '~0').replaceAll('/', '~1');\n}\n\n/**\n * Decodes a JSON pointer into an array of segments.\n */\nexport function decode(pointer: string): DecodedPath {\n  const [first, ...parts] = pointer.split('/');\n  if (first !== '') {\n    throw new Error(`Invalid JSON pointer \"${pointer}\"`);\n  }\n  return parts.map((segment) => decodeSegment(segment));\n}\n\n/**\n * Encodes an array of segments into a JSON pointer.\n */\nexport function encode(segments: DecodedPath): string {\n  return ['', ...segments.map((segment) => encodeSegment(segment))].join('/');\n}\n\n/**\n * Gets a nested value from an object using a JSON pointer.\n */\nexport function resolve(object: unknown, pointer: string | DecodedPath): unknown {\n  const segments = Array.isArray(pointer) ? pointer : decode(pointer);\n\n  if (typeof object !== 'object' || object === null) {\n    throw new Error(`Cannot get value from non-object at \"${pointer}\"`);\n  }\n\n  return segments.reduce((result: unknown, segment, i) => {\n    if (result && typeof result === 'object') {\n      return (result as Record<PropertyKey, unknown>)[segment];\n    }\n    const currentPointer = encode(segments.slice(0, i));\n    throw new Error(`Cannot get value from non-object at \"${currentPointer}\"`);\n  }, object);\n}\n\n/**\n * Build an expression that can be used to access a nested value from an object when evaluated.\n */\nexport function toExpression(name: string, pointer: string | DecodedPath): string {\n  const segments = Array.isArray(pointer) ? pointer : decode(pointer);\n  return `${name}${segments\n    .map((segment) => {\n      if (typeof segment === 'string' && isValidJsIdentifier(segment)) {\n        return `.${segment}`;\n      }\n      return `[${JSON.stringify(segment)}]`;\n    })\n    .join('')}`;\n}\n\nexport interface GenerateSuggestionsOptions {\n  max?: number;\n  filter?: (value: unknown) => boolean;\n}\n\nfunction* generatePointerSuggestions(\n  obj: unknown,\n  options: GenerateSuggestionsOptions,\n  prefix: DecodedPath,\n): Generator<DecodedPath> {\n  if (!options.filter || (options.filter && options.filter(obj))) {\n    yield prefix;\n  }\n\n  if (obj && typeof obj === 'object') {\n    if (Array.isArray(obj)) {\n      for (let i = 0; i < obj.length; i += 1) {\n        yield* generatePointerSuggestions(obj[i], options, [...prefix, i]);\n      }\n    } else {\n      for (const key of Object.keys(obj)) {\n        yield* generatePointerSuggestions((obj as Record<PropertyKey, unknown>)[key], options, [\n          ...prefix,\n          key,\n        ]);\n      }\n    }\n  }\n}\n\nfunction* take<T>(generator: Generator<T>, max: number): Generator<T> {\n  let i = 0;\n  for (const item of generator) {\n    if (i >= max) {\n      return;\n    }\n    i += 1;\n    yield item;\n  }\n}\n\nexport interface Suggestion {\n  pointer: string;\n  depth: number;\n}\n\nexport function generateSuggestions(\n  obj: unknown,\n  options: GenerateSuggestionsOptions = {},\n): Suggestion[] {\n  const pointers = generatePointerSuggestions(obj, options, []);\n  return Array.from(take(pointers, options.max ?? 1000), (pointer) => ({\n    pointer: encode(pointer),\n    depth: pointer.length,\n  }));\n}\n","import * as React from 'react';\nimport { Emitter } from '@mui/toolpad-utils/events';\n\nconst values = new Map<string, unknown>();\nconst emitter = new Emitter<Record<string, null>>();\n\nexport function reset() {\n  values.clear();\n}\n\nexport function update(key: string, value: unknown) {\n  values.set(key, value);\n  emitter.emit(key, null);\n}\n\nexport function subscribe(key: string, callback: () => void) {\n  return emitter.subscribe(key, callback);\n}\n\nexport function getSnapshot(key: string) {\n  return values.get(key);\n}\n\ninterface ProbeContextValue {\n  update: (key: string, value: unknown) => void;\n  subscribe: (key: string, callback: () => void) => () => void;\n  getSnapshot: (key: string) => unknown;\n}\n\nconst ProbeContext = React.createContext<ProbeContextValue | null>(null);\n\nexport interface ProbeProviderProps {\n  children?: React.ReactNode;\n}\n\nexport function useProbeTarget(key: string, value: unknown) {\n  const probeContext = React.useContext(ProbeContext);\n  React.useEffect(() => {\n    update(key, value);\n  }, [probeContext, key, value]);\n}\n\nexport function useProbe(key: string) {\n  const subscribeKey = React.useCallback((cb: () => void) => subscribe(key, cb), [key]);\n  const getKeySnapshot = React.useCallback(() => getSnapshot(key), [key]);\n  return React.useSyncExternalStore(subscribeKey, getKeySnapshot);\n}\n\nexport function useProbes() {\n  return React.useContext(ProbeContext);\n}\n","import * as React from 'react';\nimport { Box, MenuItem, Stack, TextField, Typography } from '@mui/material';\nimport useDebouncedHandler from '@mui/toolpad-utils/hooks/useDebouncedHandler';\nimport { DataGridSpec, RowsSpec } from '../../shared/schemas';\nimport JsonPointerInput from '../JsonPointerInput';\nimport { useProbe } from '../probes';\n\nconst DATA_KIND_OPTIONS = [\n  {\n    value: 'property',\n    label: 'Property',\n  },\n  {\n    value: 'fetch',\n    label: 'Fetch from REST API',\n  },\n];\n\nconst FETCH_METHOD_OPTIONS = ['GET', 'POST'] as const;\n\ntype PropertySpec = Extract<RowsSpec, { kind: 'property' }>;\n\ninterface RenderRowIdSelectorInput {\n  (params?: { target?: unknown }): React.ReactNode;\n}\n\ninterface PropertyEditorProps {\n  providerSelectorInput: React.ReactNode;\n  renderRowIdSelectorInput: RenderRowIdSelectorInput;\n  // eslint-disable-next-line react/no-unused-prop-types\n  value: PropertySpec;\n  // eslint-disable-next-line react/no-unused-prop-types\n  onChange: (value: PropertySpec) => void;\n}\n\nfunction PropertyEditor({ providerSelectorInput, renderRowIdSelectorInput }: PropertyEditorProps) {\n  const liveRows = useProbe('rows');\n\n  return (\n    <Stack sx={{ width: '100%', height: '100%' }} direction=\"row\">\n      <Box sx={{ flex: 1, p: 2 }}>\n        {providerSelectorInput}\n        {renderRowIdSelectorInput({ target: (liveRows as any)?.[0] })}\n        <Typography>\n          Pass the data through a <code>rows</code> property on your component.\n          {/* TODO: show example */}\n        </Typography>\n      </Box>\n      <Box sx={{ flex: 1 }}>right</Box>\n    </Stack>\n  );\n}\n\nfunction useDebouncedInput<T>(\n  value: T,\n  onChange: (value: T) => void,\n  delay: number,\n): [T, (newValue: T) => void] {\n  const [input, setInput] = React.useState(value);\n  React.useEffect(() => {\n    setInput(value);\n  }, [value]);\n\n  const debouncedOnChange = useDebouncedHandler(onChange, delay);\n\n  const handleInputChange = React.useCallback(\n    (newValue: T) => {\n      setInput(newValue);\n      debouncedOnChange(newValue);\n    },\n    [debouncedOnChange],\n  );\n\n  return [input, handleInputChange];\n}\n\nfunction rowSelectorFilter(value: unknown): boolean {\n  return Array.isArray(value) && (value.length <= 0 || (value[0] && typeof value[0] === 'object'));\n}\n\nfunction rowIdSelectorFilter(value: unknown): boolean {\n  return typeof value === 'string' || typeof value === 'number';\n}\n\ntype FetchSpec = Extract<RowsSpec, { kind: 'fetch' }>;\n\ninterface FetchEditorProps {\n  providerSelectorInput: React.ReactNode;\n  renderRowIdSelectorInput: RenderRowIdSelectorInput;\n  value: FetchSpec;\n  onChange: (value: FetchSpec) => void;\n}\n\nfunction FetchEditor({\n  providerSelectorInput,\n  renderRowIdSelectorInput,\n  value: valueProp,\n  onChange: onChangeProp,\n}: FetchEditorProps) {\n  const [input, setInput] = useDebouncedInput(valueProp, onChangeProp, 300);\n\n  const liveRows = useProbe('rows');\n  const rawData = useProbe('fetch.rawData');\n\n  return (\n    <Stack sx={{ width: '100%', height: '100%' }} direction=\"row\">\n      <Box sx={{ flex: 1, height: '100%', p: 2, overflow: 'auto' }}>\n        {providerSelectorInput}\n\n        <React.Fragment>\n          <Stack direction=\"row\" sx={{ gap: 1 }}>\n            <TextField\n              select\n              sx={{ width: '110px' }}\n              value={input.method ?? 'GET'}\n              label=\"Method\"\n              onChange={(event) =>\n                setInput({\n                  ...input,\n                  method: event.target.value as (typeof FETCH_METHOD_OPTIONS)[number],\n                })\n              }\n            >\n              {FETCH_METHOD_OPTIONS.map((option) => (\n                <MenuItem key={option} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n            </TextField>\n            <TextField\n              label=\"URL\"\n              fullWidth\n              value={input.url || '/'}\n              onChange={(event) => setInput({ ...input, url: event.target.value })}\n            />\n          </Stack>\n          <JsonPointerInput\n            label=\"Rows Selector\"\n            target={rawData}\n            filter={rowSelectorFilter}\n            fullWidth\n            value={input.selector || ''}\n            onChange={(newValue) => setInput({ ...input, selector: newValue })}\n            helperText={\n              <React.Fragment>\n                Valid <a href=\"https://datatracker.ietf.org/doc/html/rfc6901\">JSON Pointer</a> that\n                references a (nested) property in the returned data that represents the rows.\n              </React.Fragment>\n            }\n          />\n          {renderRowIdSelectorInput({ target: (liveRows as any)?.[0] })}\n        </React.Fragment>\n      </Box>\n      <Box sx={{ flex: 1, height: '100%', overflow: 'auto', px: 4 }}>\n        {\n          <pre>\n            {typeof liveRows === 'undefined' ? 'undefined' : JSON.stringify(liveRows, null, 2)}\n          </pre>\n        }\n      </Box>\n    </Stack>\n  );\n}\n\nexport interface RowsSpecEditorProps {\n  renderRowIdSelectorInput: RenderRowIdSelectorInput;\n  value: RowsSpec;\n  onChange: (value: RowsSpec) => void;\n}\n\nexport function RowsSpecEditor({ value, onChange, renderRowIdSelectorInput }: RowsSpecEditorProps) {\n  const providerSelectorInput = (\n    <TextField\n      select\n      value={value.kind ?? 'property'}\n      label=\"Data Provider\"\n      onChange={(event) => {\n        const newKind = event.target.value as RowsSpec['kind'];\n        onChange({ kind: newKind });\n      }}\n    >\n      {DATA_KIND_OPTIONS.map((option) => (\n        <MenuItem key={option.value} value={option.value}>\n          {option.label}\n        </MenuItem>\n      ))}\n    </TextField>\n  );\n\n  switch (value.kind) {\n    case 'property':\n      return (\n        <PropertyEditor\n          providerSelectorInput={providerSelectorInput}\n          renderRowIdSelectorInput={renderRowIdSelectorInput}\n          value={value}\n          onChange={onChange}\n        />\n      );\n    case 'fetch':\n      return (\n        <FetchEditor\n          providerSelectorInput={providerSelectorInput}\n          renderRowIdSelectorInput={renderRowIdSelectorInput}\n          value={value}\n          onChange={onChange}\n        />\n      );\n    default:\n      return null;\n  }\n}\n\nexport interface RowsEditorProps {\n  value: DataGridSpec;\n  onChange: (value: DataGridSpec) => void;\n}\n\nexport default function RowsEditor({ value, onChange }: RowsEditorProps) {\n  const renderRowIdSelectorInput: RenderRowIdSelectorInput = ({ target } = {}) => (\n    <JsonPointerInput\n      label=\"Row ID selector\"\n      value={value.rowIdSelector || ''}\n      filter={rowIdSelectorFilter}\n      onChange={(newValue) => onChange({ ...value, rowIdSelector: newValue })}\n      target={target}\n      helperText={\n        <React.Fragment>\n          Valid <a href=\"https://datatracker.ietf.org/doc/html/rfc6901\">JSON Pointer</a> that\n          references a (nested) property in the rows, to be used as a unique identifier.\n        </React.Fragment>\n      }\n    />\n  );\n\n  return (\n    <RowsSpecEditor\n      renderRowIdSelectorInput={renderRowIdSelectorInput}\n      value={value.rows || { kind: 'property' }}\n      onChange={(rows) => onChange({ ...value, rows })}\n    />\n  );\n}\n","import * as React from 'react';\n\ninterface Handler<P extends unknown[]> {\n  (...params: P): void;\n}\n\ninterface DelayedInvocation<P extends unknown[]> {\n  startTime: number;\n  timeout: NodeJS.Timeout;\n  params: P;\n}\n\nfunction clear<P extends unknown[]>(\n  delayedInvocation: React.MutableRefObject<DelayedInvocation<P> | null>,\n) {\n  if (delayedInvocation.current) {\n    clearTimeout(delayedInvocation.current.timeout);\n    delayedInvocation.current = null;\n  }\n}\n\nfunction defer<P extends unknown[]>(\n  fn: React.MutableRefObject<Handler<P>>,\n  params: P,\n  delay: number,\n) {\n  const timeout = setTimeout(() => {\n    fn.current(...params);\n  }, delay);\n\n  return { startTime: Date.now(), timeout, params };\n}\n\n/**\n * Creates a debounced version of the handler that is passed. The invocation of [fn] is\n * delayed for [delay] milliseconds from the last invocation of the debounced function.\n *\n * This implementation adds on the lodash implementation in that it handles updates to the\n * delay value.\n */\nexport default function useDebouncedHandler<P extends unknown[]>(\n  fn: Handler<P>,\n  delay: number,\n): Handler<P> {\n  const fnRef = React.useRef(fn);\n  React.useEffect(() => {\n    fnRef.current = fn;\n  }, [fn]);\n\n  const delayedInvocation = React.useRef<DelayedInvocation<P> | null>(null);\n\n  React.useEffect(() => {\n    if (!delayedInvocation.current) {\n      return;\n    }\n\n    const { startTime, params } = delayedInvocation.current;\n\n    const elapsed = Date.now() - startTime;\n    const newDelay = Math.max(delay - elapsed, 0);\n\n    clear(delayedInvocation);\n    delayedInvocation.current = defer(fnRef, params, newDelay);\n  }, [delay]);\n\n  return React.useCallback(\n    (...params: P) => {\n      clear(delayedInvocation);\n      delayedInvocation.current = defer(fnRef, params, delay);\n    },\n    [delay],\n  );\n}\n","import { createTheme } from '@mui/material';\n\nexport default createTheme({\n  components: {\n    MuiList: {\n      defaultProps: {\n        dense: true,\n      },\n      styleOverrides: {\n        root: {\n          padding: 0,\n        },\n      },\n    },\n    MuiListItem: {\n      defaultProps: {\n        dense: true,\n      },\n    },\n    MuiListItemButton: {\n      defaultProps: {\n        dense: true,\n      },\n    },\n    MuiIconButton: {\n      defaultProps: {\n        size: 'small',\n      },\n    },\n    MuiIcon: {\n      defaultProps: {\n        fontSize: 'small',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        size: 'small',\n      },\n    },\n    MuiToggleButtonGroup: {\n      defaultProps: {\n        size: 'small',\n      },\n    },\n    MuiTextField: {\n      defaultProps: {\n        size: 'small',\n        margin: 'dense',\n      },\n    },\n    MuiCheckbox: {\n      defaultProps: {\n        size: 'small',\n      },\n    },\n    MuiFormControl: {\n      defaultProps: {\n        size: 'small',\n        margin: 'dense',\n      },\n    },\n    MuiFormHelperText: {\n      defaultProps: {\n        margin: 'dense',\n      },\n    },\n    MuiMenuItem: {\n      defaultProps: {\n        dense: true,\n      },\n    },\n    MuiAutocomplete: {\n      defaultProps: {\n        size: 'small',\n      },\n    },\n    MuiSvgIcon: {\n      defaultProps: {\n        fontSize: 'small',\n      },\n    },\n    MuiTabs: {\n      styleOverrides: {\n        root: {\n          minHeight: 0,\n        },\n      },\n    },\n    MuiTab: {\n      styleOverrides: {\n        root: {\n          padding: 8,\n          minHeight: 0,\n        },\n      },\n    },\n    MuiToolbar: {\n      defaultProps: {\n        variant: 'dense',\n      },\n    },\n    MuiFilledInput: {\n      defaultProps: {\n        margin: 'dense',\n      },\n    },\n    MuiInputBase: {\n      defaultProps: {\n        margin: 'dense',\n      },\n    },\n    MuiInputLabel: {\n      defaultProps: {\n        margin: 'dense',\n      },\n    },\n    MuiOutlinedInput: {\n      defaultProps: {\n        size: 'small',\n        margin: 'dense',\n      },\n    },\n    MuiFab: {\n      defaultProps: {\n        size: 'small',\n      },\n    },\n    MuiTable: {\n      defaultProps: {\n        size: 'small',\n      },\n    },\n  },\n});\n","import * as React from 'react';\nimport invariant from 'invariant';\nimport { DevRpcMethods } from '../shared/types';\nimport RpcClient from '../shared/RpcClient';\nimport { ToolpadFile } from '../shared/schemas';\n\nexport type ConnectionStatus = 'connecting' | 'connected' | 'disconnected';\n\ntype ServerContextValue = {\n  connectionStatus: ConnectionStatus;\n  saveFile: (name: string, file: ToolpadFile) => Promise<void>;\n};\n\nexport const ServerContext = React.createContext<{\n  connectionStatus: ConnectionStatus;\n  saveFile: (name: string, file: ToolpadFile) => Promise<void>;\n} | null>(null);\n\ninterface ServerProviderProps {\n  wsUrl: string;\n  children?: React.ReactNode;\n}\n\nexport function ServerProvider({ wsUrl, children }: ServerProviderProps) {\n  const [client, setClient] = React.useState<RpcClient<DevRpcMethods> | null>(null);\n  const [connectionStatus, setConnectionStatus] = React.useState<ConnectionStatus>('connecting');\n\n  React.useEffect(() => {\n    const ws = new WebSocket(wsUrl);\n    setClient(new RpcClient<DevRpcMethods>(ws));\n\n    const handleOpen = () => {\n      setConnectionStatus('connected');\n    };\n\n    const handleClose = () => {\n      setConnectionStatus('disconnected');\n    };\n\n    ws.addEventListener('open', handleOpen);\n\n    ws.addEventListener('close', handleClose);\n\n    return () => {\n      ws.removeEventListener('open', handleOpen);\n      ws.removeEventListener('close', handleClose);\n      ws.close();\n    };\n  }, [wsUrl]);\n\n  const context: ServerContextValue = React.useMemo(() => {\n    return {\n      connectionStatus,\n      saveFile(name, file) {\n        invariant(client, 'client must be initialized');\n        return client.call('saveFile', [name, file]);\n      },\n    };\n  }, [client, connectionStatus]);\n\n  return <ServerContext.Provider value={context}>{children}</ServerContext.Provider>;\n}\n\nexport function useServer() {\n  const server = React.useContext(ServerContext);\n  invariant(server, 'useServer must be used inside a ServerProvider');\n  return server;\n}\n","import * as superjson from 'superjson';\nimport { Methods, RequestId, RpcRequest, rpcResponseSchema } from './rpc';\n\nexport default class RpcClient<M extends Methods> {\n  private nextId = 0;\n\n  private ws: WebSocket;\n\n  private pendingRequests = new Map<\n    RequestId,\n    { timeout: NodeJS.Timeout; resolve: (result: any) => void; reject: (error: Error) => void }\n  >();\n\n  constructor(ws: WebSocket) {\n    this.ws = ws;\n\n    this.ws.addEventListener('message', (event) => {\n      const message = rpcResponseSchema.parse(superjson.parse(event.data));\n\n      const { id, result, error } = message;\n\n      const pending = this.pendingRequests.get(id);\n\n      if (!pending) {\n        // Timed out\n        return;\n      }\n\n      clearTimeout(pending.timeout);\n      this.pendingRequests.delete(id);\n\n      if (error) {\n        pending.reject(\n          Object.assign(\n            new Error(`${error.code ? `${error.code}: ` : ''}${error.message || 'Unknown error'}`, {\n              cause: error,\n            }),\n            {\n              code: error.code,\n            },\n          ),\n        );\n      } else {\n        pending.resolve(result);\n      }\n    });\n  }\n\n  async call(\n    method: keyof M & string,\n    params: Parameters<M[typeof method]>,\n  ): Promise<Awaited<ReturnType<M[typeof method]>>> {\n    return new Promise<any>((resolve, reject) => {\n      const id = this.nextId;\n      this.nextId += 1;\n\n      const message = superjson.stringify({\n        jsonrpc: '2.0',\n        method,\n        params,\n        id,\n      } satisfies RpcRequest);\n\n      const timeout = setTimeout(() => {\n        this.pendingRequests.delete(id);\n        reject(new Error(`Request timed out after 30 seconds`));\n      }, 30000);\n\n      this.pendingRequests.set(id, { timeout, resolve, reject });\n\n      this.ws.send(message);\n    });\n  }\n}\n","// https://www.jsonrpc.org/specification\n\nimport * as z from 'zod';\n\nexport const requestIdSchema = z.union([z.string(), z.number(), z.null()]);\n\nexport type RequestId = z.infer<typeof requestIdSchema>;\n\nexport const rpcRequestSchema = z.object({\n  jsonrpc: z.literal('2.0'),\n  method: z.string(),\n  params: z.array(z.any()),\n  id: requestIdSchema,\n});\n\nexport type RpcRequest = z.infer<typeof rpcRequestSchema>;\n\nexport const rpcErrorSchema = z.object({\n  code: z.number(),\n  message: z.string(),\n  data: z.any().optional(),\n});\n\nexport type RpcError = z.infer<typeof rpcErrorSchema>;\n\nexport const rpcErrorResponseSchema = z.object({\n  jsonrpc: z.literal('2.0'),\n  result: z.undefined(),\n  error: rpcErrorSchema,\n  id: requestIdSchema,\n});\n\nexport type RpcErrorResponse = z.infer<typeof rpcErrorResponseSchema>;\n\nexport const rpcSuccessResponseSchema = z.object({\n  jsonrpc: z.literal('2.0'),\n  result: z.any(),\n  error: z.undefined(),\n  id: requestIdSchema,\n});\n\nexport type RpcSuccessResponse = z.infer<typeof rpcSuccessResponseSchema>;\n\nexport const rpcResponseSchema = z.union([rpcErrorResponseSchema, rpcSuccessResponseSchema]);\n\nexport type RpcResponse = z.infer<typeof rpcResponseSchema>;\n\nexport const rpcMessageSchema = z.union([\n  z.object({\n    request: rpcRequestSchema,\n    response: z.undefined().optional(),\n  }),\n  z.object({\n    request: z.undefined().optional(),\n    response: rpcResponseSchema,\n  }),\n]);\n\nexport type RpcMessage = z.infer<typeof rpcMessageSchema>;\n\nexport type Methods = Record<string, (...args: any[]) => any>;\n","import path from 'path-browserify';\nimport { format } from '../prettier';\nimport { ToolpadFile } from '../schemas';\nimport generateDataGridComponent from './generateDataGridComponent';\nimport { getComponentNameFromInputFile } from '../paths';\n\nexport type CodeFiles = [string, { code: string }][];\n\nexport interface CodeGenerationResult {\n  files: CodeFiles;\n}\n\nexport type BaseGenerateComponentOptions =\n  | {\n      target: 'prod';\n    }\n  | {\n      target: 'preview';\n    }\n  | {\n      target: 'dev';\n      wsUrl: string;\n    };\n\nexport type GenerateComponentOptions = BaseGenerateComponentOptions & {\n  outDir: string;\n};\n\nexport async function generateComponent(\n  filePath: string,\n  file: ToolpadFile,\n  config: GenerateComponentOptions,\n): Promise<CodeGenerationResult> {\n  switch (file.kind) {\n    case 'DataGrid':\n      return generateDataGridComponent(filePath, file, config);\n    default:\n      throw new Error(`No implementation yet for ${JSON.stringify(file.kind)}`);\n  }\n}\n\nexport interface GenerateIndexConfig {\n  outDir?: string;\n}\n\nexport async function generateIndex(\n  entries: string[],\n  config: GenerateIndexConfig,\n): Promise<CodeGenerationResult> {\n  const { outDir = '/' } = config;\n\n  const code = entries\n    .map((entryPath) => {\n      const name = getComponentNameFromInputFile(entryPath);\n      return `export { default as ${name} } from './${name}';`;\n    })\n    .join('\\n');\n\n  const fileName = path.join(outDir, 'index.ts');\n\n  const files: CodeFiles = [[fileName, { code: await format(code) }]];\n\n  return { files };\n}\n","import * as prettier from 'prettier/standalone';\n// @ts-expect-error Waiting for https://github.com/prettier/prettier/pull/15018 to be released (expected in >=3.0.1)\nimport parserEstree from 'prettier/plugins/estree';\nimport parserBabel from 'prettier/plugins/babel';\n\nconst DEFAULT_OPTIONS = {\n  parser: 'babel-ts',\n  plugins: [parserBabel, parserEstree],\n};\n\nexport async function format(code: string): Promise<string> {\n  return prettier.format(code, DEFAULT_OPTIONS);\n}\n","import path from 'path-browserify';\nimport type { GridColDef } from '@mui/x-data-grid-pro';\nimport { format } from '../prettier';\nimport { DataGridFile } from '../schemas';\nimport { WithDevtoolParams } from '../types';\nimport * as jsonPointer from '../jsonPointer';\nimport type { CodeFiles, CodeGenerationResult, GenerateComponentOptions } from '.';\nimport { serializeObject, serializeArray, SerializedProperties } from './utils';\nimport { Scope } from './Scope';\nimport Imports from './Imports';\nimport { getComponentNameFromInputFile } from '../paths';\n\nexport default async function generateDataGridComponent(\n  filePath: string,\n  file: DataGridFile,\n  options: GenerateComponentOptions,\n): Promise<CodeGenerationResult> {\n  const name = getComponentNameFromInputFile(filePath);\n\n  const globalScope = new Scope();\n  const imports = new Imports(globalScope);\n\n  imports.addImport('react', '*', 'React');\n  imports.addImport('@mui/x-data-grid-pro', 'DataGridPro', 'DataGridPro');\n  imports.addImport('@mui/material', 'Box', 'Box');\n  if (options.target !== 'prod') {\n    imports.addImport('@mui/toolpad-next/runtime', '*', '_runtime');\n  }\n\n  if (file.spec?.rows?.kind === 'fetch') {\n    globalScope.allocate('executeFetch');\n  }\n  globalScope.allocate('columns');\n  globalScope.allocate('ErrorOverlay');\n  globalScope.allocate('ErrorOverlayProps');\n\n  const componentName = globalScope.allocateSuggestion(name);\n  const componentPropsName = globalScope.allocateSuggestion(`${name}Props`);\n\n  const { outDir = '/' } = options;\n\n  const hasRowsProperty = (file.spec?.rows?.kind ?? 'property') === 'property';\n\n  const columnDefs: string[] =\n    file.spec?.columns?.map((column) => {\n      const properties: SerializedProperties<GridColDef> = {\n        field: JSON.stringify(column.field),\n      };\n\n      if (column.type) {\n        properties.type = JSON.stringify(column.type);\n      }\n\n      const defaultValueSelector = jsonPointer.encode([column.field]);\n      if (column.valueSelector && column.valueSelector !== defaultValueSelector) {\n        properties.valueGetter = `({ row }) => ${jsonPointer.toExpression(\n          'row',\n          column.valueSelector,\n        )}`;\n      }\n\n      return serializeObject(properties);\n    }) || [];\n\n  const code = `\n    ${imports.print()}\n\n    ${\n      file.spec?.rows?.kind === 'fetch'\n        ? `\n      async function executeFetch() {\n        const response = await fetch(${JSON.stringify(file.spec.rows.url || '')}, { \n          method: ${JSON.stringify(file.spec.rows.method || 'GET')} \n        });\n      \n        if (!response.ok) {\n          throw new Error(\\`Request failed with status \\${response.status}\\`);\n        }\n      \n        const data = await response.json();\n\n        const result = ${jsonPointer.toExpression('data', file.spec.rows.selector || '')};\n\n        ${options.target === 'prod' ? '' : `_runtime.probes.update('fetch.rawData', data);`}\n\n        return result\n      }\n    `\n        : ''\n    }\n\n    interface ErrorOverlayProps {\n      error: Error;\n    }\n\n    function ErrorOverlay({ error }: ErrorOverlayProps) {\n      return (\n        <Box\n          sx={{\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            padding: 2,\n          }}\n        >\n          {String(error.message || error)}\n        </Box>\n      )\n    }\n\n    class ErrorBoundary extends React.Component<{ children?: React.ReactNode }> {\n      state: { error: Error | null } = { error: null };\n    \n      static getDerivedStateFromError(error: any) {\n        return { error };\n      }\n    \n      render() {\n        return this.state.error ? (\n          <ErrorOverlay error={this.state.error} />\n        ) : (\n          this.props.children\n        );\n      }\n    }\n\n    const columns = ${serializeArray(columnDefs)};\n\n    export interface ${componentPropsName} {\n      ${hasRowsProperty ? 'rows: { id: string | number }[];' : ''}\n    }\n\n    function ${componentName}({ \n      ${\n        !file.spec?.rows?.kind || file.spec?.rows?.kind === 'property'\n          ? 'rows = [], loading = false, error'\n          : ''\n      }\n    }: ${componentPropsName}) {\n\n      ${\n        file.spec?.rows?.kind === 'fetch'\n          ? `\n              const [rows, setRows] = React.useState([]);\n              const [error, setError] = React.useState()\n              const [loading, setLoading] = React.useState(false)\n\n              React.useEffect(() => {\n                setLoading(true)\n                executeFetch().then(setRows, setError).finally(() => setLoading(false));\n              }, [])\n            `\n          : ''\n      }\n\n      ${options.target === 'prod' ? '' : `_runtime.probes.useProbeTarget('rows', rows);`}\n\n\n      return (\n        <Box sx={{ \n          position: 'relative', \n          width: '100%',\n          ${file.spec?.heightMode === 'container' ? 'height: \"100%\"' : ''}\n          ${file.spec?.heightMode === 'fixed' ? `height: ${file.spec?.height ?? 400}` : ''}\n        }}>\n          <ErrorBoundary>\n            {error ? (\n              <ErrorOverlay error={error} />\n            ) : (\n              <DataGridPro\n                rows={rows}\n                loading={loading}\n                columns={columns}\n                ${file.spec?.heightMode === 'auto' ? 'autoHeight' : ''}\n                ${\n                  file.spec?.rowIdSelector\n                    ? `getRowId={(row) => ${jsonPointer.toExpression(\n                        'row',\n                        file.spec.rowIdSelector || '',\n                      )}}`\n                    : ''\n                }\n              />\n            )}\n          </ErrorBoundary>\n          ${\n            options.target === 'dev'\n              ? `<_runtime.EditButton sx={{ position: 'absolute', bottom: 0, right: 0, mb: 2, mr: 2, zIndex: 1 }} />`\n              : ''\n          }\n        </Box>\n      )\n    }\n\n    ${componentName}.displayName = ${JSON.stringify(name)};\n\n    export default ${\n      options.target === 'dev'\n        ? `_runtime.withDevtool(${componentName}, ${serializeObject({\n            filePath: JSON.stringify(filePath),\n            file: JSON.stringify(file),\n            wsUrl: JSON.stringify(options.wsUrl),\n            dependencies: imports.printDynamicImports(),\n          } satisfies Record<keyof WithDevtoolParams, string>)})`\n        : componentName\n    };\n  `;\n\n  const fileName = path.join(outDir, name, 'index.tsx');\n\n  const files: CodeFiles = [[fileName, { code: await format(code) }]];\n\n  return { files };\n}\n","export function serializeObject(properties: Record<string, string>): string {\n  return `{${Object.entries(properties)\n    .map((entry) => entry.join(': '))\n    .join(', ')}}`;\n}\nexport function serializeArray(items: string[]): string {\n  return `[${items.join(', ')}]`;\n}\n\nexport type SerializedProperties<O> = {\n  [K in keyof O]: string | (undefined extends O[K] ? undefined : never);\n};\n","import { isValidJsIdentifier } from '@mui/toolpad-utils/strings';\n\nexport class Scope {\n  private readonly bindings = new Set<string>();\n\n  constructor(private readonly parent?: Scope) {}\n\n  generateUniqueName(base: string): string {\n    let i = 1;\n    let suggestion = base;\n    while (this.has(suggestion)) {\n      suggestion = `${base}_${i}`;\n      i += 1;\n    }\n    return suggestion;\n  }\n\n  allocate(name: string): void {\n    if (this.has(name)) {\n      throw new Error(`Name ${name} is already allocated`);\n    }\n    if (!isValidJsIdentifier(name)) {\n      throw new Error(`Name ${name} is not a valid JS identifier`);\n    }\n    this.bindings.add(name);\n  }\n\n  allocateSuggestion(base: string = '_v'): string {\n    const name = this.generateUniqueName(base);\n    this.allocate(name);\n    return name;\n  }\n\n  has(key: string): boolean {\n    if (key in this.bindings) {\n      return true;\n    }\n\n    if (this.parent) {\n      return this.parent.has(key);\n    }\n\n    return false;\n  }\n\n  fork(): Scope {\n    return new Scope(this);\n  }\n\n  isGlobal(): boolean {\n    return !this.parent;\n  }\n}\n","import invariant from 'invariant';\nimport { Scope } from './Scope';\nimport { serializeArray } from './utils';\n\nexport default class Imports {\n  private readonly imports = new Map<string, Map<string, string>>();\n\n  constructor(private readonly scope: Scope) {\n    invariant(scope.isGlobal(), 'Imports must be under a global scope');\n  }\n\n  addImport(id: string, importedName: string, localName: string): void {\n    this.scope.allocate(localName);\n\n    let idImports = this.imports.get(id);\n    if (!idImports) {\n      idImports = new Map();\n      this.imports.set(id, idImports);\n    }\n\n    if (idImports.has(importedName)) {\n      throw new Error(`Import ${importedName} already exists`);\n    }\n\n    idImports.set(importedName, localName);\n  }\n\n  useImport(id: string, importedName: string, localNameSuggestion: string = importedName): string {\n    let idImports = this.imports.get(id);\n    if (!idImports) {\n      idImports = new Map();\n      this.imports.set(id, idImports);\n    }\n\n    let localName = idImports.get(importedName);\n\n    if (!localName) {\n      localName = this.scope.generateUniqueName(localNameSuggestion);\n      this.addImport(id, importedName, localName);\n    }\n\n    return localName;\n  }\n\n  print(): string {\n    const importLines = [];\n\n    for (const [id, idImports] of this.imports.entries()) {\n      const namedImports = [];\n      let defaultImport: string | undefined;\n      for (const [importedName, localName] of idImports.entries()) {\n        if (importedName === '*') {\n          importLines.push(`import * as ${localName} from ${JSON.stringify(id)};`);\n        } else if (importedName === 'default') {\n          defaultImport = importedName;\n        } else if (importedName === localName) {\n          namedImports.push(importedName);\n        } else {\n          namedImports.push(`${importedName} as ${localName}`);\n        }\n      }\n\n      const specifiers = [];\n\n      if (defaultImport) {\n        specifiers.push(defaultImport);\n      }\n\n      if (namedImports.length > 0) {\n        specifiers.push(`{ ${namedImports.join(', ')} }`);\n      }\n\n      if (specifiers.length > 0) {\n        importLines.push(`import ${specifiers.join(', ')} from ${JSON.stringify(id)};`);\n      }\n    }\n\n    return importLines.join('\\n');\n  }\n\n  printDynamicImports(): string {\n    const serializedEntries = Array.from(this.imports.keys(), (name) =>\n      serializeArray([JSON.stringify(name), `() => import(${JSON.stringify(name)})`]),\n    );\n    return serializeArray(serializedEntries);\n  }\n}\n","import path from 'path-browserify';\n\nfunction isValidFileNAme(base: string): boolean {\n  return /^[a-zA-Z][a-zA-Z0-9]*$/.test(base);\n}\n\nexport function getComponentNameFromInputFile(filePath: string): string {\n  const name = path.basename(filePath, '.yml');\n\n  if (!isValidFileNAme(name)) {\n    throw new Error(`Invalid file name ${JSON.stringify(name)}`);\n  }\n\n  return name;\n}\n\nexport function getOutputPathForInputFile(filePath: string, outDir = '/') {\n  const ext = path.extname(filePath);\n  const base = path.basename(filePath, ext);\n  return path.join(outDir, path.dirname(filePath), base, 'index.tsx');\n}\n","import * as React from 'react';\nimport { ScopedCssBaseline, Box, ThemeProvider, GlobalStyles, Portal } from '@mui/material';\nimport theme from './theme';\n\ninterface ResizeHandleProps {\n  onResize?: (height: number) => void;\n  onCommitResize?: (height: number) => void;\n}\n\nfunction ResizeHandle({ onResize, onCommitResize }: ResizeHandleProps) {\n  const prevSize = React.useRef<number | null>(null);\n  const [resizing, setResizing] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleMouseMove = (event: MouseEvent) => {\n      if (prevSize.current !== null) {\n        onResize?.(event.clientY - prevSize.current);\n        prevSize.current = event.clientY;\n      }\n    };\n\n    const handleMouseUp = (event: MouseEvent) => {\n      if (prevSize.current !== null) {\n        onCommitResize?.(event.clientY - prevSize.current);\n        prevSize.current = null;\n      }\n      setResizing(false);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [onResize, onCommitResize]);\n\n  return (\n    <Box\n      sx={{\n        my: '-4px',\n        width: '100%',\n        height: '9px',\n        cursor: 'ns-resize',\n        pointerEvents: 'auto',\n      }}\n      onMouseDown={(event) => {\n        setResizing(true);\n        prevSize.current = event.clientY;\n      }}\n    >\n      <GlobalStyles\n        styles={{\n          body: resizing\n            ? {\n                userSelect: 'none',\n                cursor: 'ns-resize',\n                pointerEvents: 'none',\n              }\n            : {},\n        }}\n      />\n    </Box>\n  );\n}\n\nexport interface DevtoolHostProps {\n  children?: React.ReactNode;\n}\n\n/**\n * Pure presentational component that defines the surface we use to render the devtools in\n */\nexport default function DevtoolHost({ children }: DevtoolHostProps) {\n  const rootRef = React.useRef<HTMLDivElement>(null);\n  const [height, setHeight] = React.useState(() => window.innerHeight / 2);\n\n  const handleResize = (y: number) => {\n    setHeight((prevHeight) => prevHeight - y);\n  };\n\n  return (\n    <Portal>\n      <ThemeProvider theme={theme}>\n        <ScopedCssBaseline>\n          <Box\n            ref={rootRef}\n            className=\"mui-fixed\"\n            sx={{\n              position: 'fixed',\n              bottom: 0,\n              left: 0,\n              right: 0,\n              height,\n              borderTop: 1,\n              borderColor: 'divider',\n              backgroundColor: 'background.paper',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'stretch',\n              zIndex: 1,\n            }}\n          >\n            <GlobalStyles styles={{ body: { marginBottom: `${height}px` } }} />\n            <ResizeHandle onResize={handleResize} />\n            <Box\n              sx={{\n                flex: 1,\n                minHeight: 0,\n                marginRight: '-1px',\n                borderRight: 1,\n                borderColor: 'divider',\n              }}\n            >\n              {children}\n            </Box>\n          </Box>\n        </ScopedCssBaseline>\n      </ThemeProvider>\n    </Portal>\n  );\n}\n","import * as React from 'react';\nimport { ToolpadFile } from '../shared/schemas';\n\nexport interface ComponentInfo {\n  id: string;\n  name: string;\n  file: ToolpadFile;\n  props: object;\n}\n\nexport const CurrentComponentContext = React.createContext<ComponentInfo | null>(null);\n"]}