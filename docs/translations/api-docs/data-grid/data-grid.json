{
  "componentDescription": "",
  "propDescriptions": {
    "apiRef": {
      "description": "The ref object that allows Data Grid manipulation. Can be instantiated with <code>useGridApiRef()</code>."
    },
    "autoHeight": {
      "description": "If <code>true</code>, the Data Grid height is dynamic and follow the number of rows in the Data Grid."
    },
    "autosizeOptions": { "description": "The options for autosize when user-initiated." },
    "getRowId": { "description": "Return the id of a given [[GridRowModel]]." },
    "initialState": {
      "description": "The initial state of the DataGrid. The data in it will be set in the state on initialization but will not be controlled. If one of the data in <code>initialState</code> is also being controlled, then the control state wins."
    },
    "paginationMode": {
      "description": "Pagination can be processed on the server or client-side. Set it to &#39;client&#39; if you would like to handle the pagination on the client-side. Set it to &#39;server&#39; if you would like to handle the pagination on the server-side."
    },
    "processRowUpdate": {
      "description": "Callback called before updating a row with new values in the row and cell editing.",
      "typeDescriptions": {
        "newRow": "Row object with the new values.",
        "oldRow": "Row object with the old values.",
        "Promise<R> | R": "The final values to update the row."
      }
    },
    "rowModesModel": { "description": "Controls the modes of the rows." },
    "slots": { "description": "Overridable components." }
  },
  "classDescriptions": {}
}
